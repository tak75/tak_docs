===================
Strategyパターン
===================

適用ケース
==========

* 多くの類似クラスを作成する場合に有効。
* 実行時に振る舞いを変更したい場合に有効。

定義
====

Strategy パターンは一連のアルゴリズムを定義し、それぞれをカプセル化してそれらを交換可能にする。
Strategy パターンによって、アルゴリズムを使用するクライアントとは独立して、アルゴリズムを変更できる。

説明
====

* 多くの類似クラスを作成する場合、クラス内の変化する部分と不変な部分と分離する。
* 不変な部分はスーパークラスに実装し、それを類似クラスで継承する。
* 変化する部分はインタフェースで定義し、そのインタフェースを実装した振る舞いクラスを必要なだけ用意する。
* 上記類似クラスは、この振る舞いクラスのインスタンスを持つことで、不変な部分に影響を与えずに変化する部分を後で変更したり拡張したりできる。

図面
====

クラス図の例を :numref:`Strategyパターン_クラス図` に、シーケンス図を :numref:`Strategyパターン_シーケンス図` に各々示す。

.. figure:: images/Strategyパターン_クラス図.png
   :scale: 85%
   :name: Strategyパターン_クラス図

   Strategyパターン クラス図

.. figure:: images/Strategyパターン_シーケンス図.png
   :scale: 85%
   :name: Strategyパターン_シーケンス図

   Strategyパターン シーケンス図
