======================
ファイル／ディレクトリ
======================

パスから名前などを取得
======================

* ディレクトリ名の取得

  .. code-block:: csharp

    string dirPath = @"C:\My Documents\My Pictures\サンプル.jpg";
    dirPath = System.IO.Path.GetDirectoryName(dirPath);
    //結果: C:\My Documents\My Pictures
    System.IO.Path.GetDirectoryName(dirPath);
    //結果: C:\My Documents

* 拡張子の取得

  .. code-block:: csharp

    System.IO.Path.GetExtension(@"C:\My Documents\My Pictures\サンプル.jpg");
    //結果: .jpg

* ファイル名の取得

  .. code-block:: csharp

    System.IO.Path.GetFileName(@"C:\My Documents\My Pictures\サンプル.jpg");
    //結果: サンプル.jpg

* ファイル名（拡張子なし）の取得

  .. code-block:: csharp

    System.IO.Path.GetFileNameWithoutExtension(@"C:\My Documents\My Pictures\サンプル.jpg");
    //結果: サンプル

* ルートディレクトリ名の取得

  .. code-block:: csharp

    System.IO.Path.GetPathRoot(@"C:\My Documents\My Pictures\サンプル.jpg");
    //結果: C:\

* ディレクトリ名の取得

  .. code-block:: csharp

    System.IO.Path.GetFileName(@"C:\My Documents\My Pictures");
    //結果: My Pictures

ディレクトリ操作
================

* exeディレクトリパスの取得

  .. code-block:: csharp

    Environment.CurrentDirectory

ファイル操作
============

* ファイルパス一覧の取得

  .. code-block:: csharp

    // ファイルパス一覧を取得し、ファイル数を制限する
    // （ファイル数が上弦を超過する場合はファイル名でソートし順に削除）
    filePathList = Directory.GetFiles(_dirPath, "*.zip", SearchOption.TopDirectoryOnly);
    if (filePathList.Count() > _fileRotationNum)
    {
        var delNum = filePathList.Count() - _fileRotationNum;
        foreach (var filePath in filePathList.OrderBy(x => x))
        {
            File.Delete(filePath);
            delNum--;
            if (delNum <= 0) break;
        }
    }

その他操作
==========

* ディレクトリパス＋ファイル名（結合）

  .. code-block:: csharp

    string fileName = "サンプル.jpg";
    string dirPath = @"C:\My Documents\My Pictures";
    string filePath = Path.Combine(dirPath, fileName);
    //結果: C:\My Documents\My Pictures\サンプル.jpg

